{"ast":null,"code":"import { takeLatest, call, all, put, take } from 'redux-saga/effects';\nimport { auth, handleUserProfile, getCurrentUser, GoogleProvider } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess, signOutUserSuccess, userError } from './user.actions';\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(handleUserProfile, {\n      userAuth: user\n    });\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (err) {// console.log(err);\n  }\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {//colsole.log(err);\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {//console.log(err);\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOutUSer() {\n  try {\n    yield auth.signOut();\n    yield put(signOutUserSuccess());\n  } catch (err) {// conole.log(err);\n  }\n}\nexport function* onSignOutUserStart() {\n  yield takeLatest(userTypes.SIGN_OUT_USER_START, signOutUSer);\n}\nexport function* signUpUser({\n  payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }\n}) {\n  if (password !== confirmPassword) {\n    const err = ['Password Doesn\\'t Match.'];\n    yield put(userError(err));\n  }\n\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield call(handleUserProfile, {\n      userAuth: user,\n      additionalData: {\n        displayName\n      }\n    });\n  } catch (err) {// console.log(err)\n  }\n}\nexport function* onSignUpUserStart() {\n  takeLatest(userTypes.SIGN_UP_USER_START, signUpUser);\n}\nexport default function* userSagas() {\n  yield all([call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutUserStart), call(onSignUpUserStart)]);\n}","map":{"version":3,"sources":["/Users/macbook/cinema/src/Redux/User/user.sagas.js"],"names":["takeLatest","call","all","put","take","auth","handleUserProfile","getCurrentUser","GoogleProvider","userTypes","signInSuccess","signOutUserSuccess","userError","getSnapshotFromUserAuth","user","userRef","userAuth","snapshot","get","id","data","err","emailSignIn","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOutUSer","signOut","onSignOutUserStart","SIGN_OUT_USER_START","signUpUser","displayName","confirmPassword","createUserWithEmailAndPassword","additionalData","onSignUpUserStart","SIGN_UP_USER_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, call, all, put, take } from 'redux-saga/effects';\nimport { auth, handleUserProfile, getCurrentUser, GoogleProvider } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess, signOutUserSuccess, userError } from './user.actions';\n\n\nexport function* getSnapshotFromUserAuth(user) {\n    try {\n        const userRef = yield call(handleUserProfile, { userAuth: user });\n        const snapshot = yield userRef.get();\n        yield put(\n            signInSuccess({\n                id: snapshot.id,\n                ...snapshot.data()\n             })\n        );\n    } catch(err) {\n        // console.log(err);\n    }\n}\n\n\nexport function* emailSignIn({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user)\n\n     } catch(err) {\n         //colsole.log(err);\n     }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n\n    } catch(err){\n        //console.log(err);\n    }\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOutUSer() {\n    try {\n        yield auth.signOut();\n        yield put(\n            signOutUserSuccess()\n        )\n\n    } catch(err){\n        // conole.log(err);\n    }\n\n}\n\nexport function* onSignOutUserStart() {\n    yield takeLatest(userTypes.SIGN_OUT_USER_START, signOutUSer);\n}\n\nexport function* signUpUser({ payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n}}) {\n    \n    if(password !== confirmPassword){\n        const err = ['Password Doesn\\'t Match.'];\n        yield put(\n            userError(err)\n        )\n    }\n\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        yield call(handleUserProfile, { userAuth: user, additionalData: { displayName }});\n\n    } catch(err) {\n        // console.log(err)\n    }\n}\n\nexport function* onSignUpUserStart() {\n    takeLatest(userTypes.SIGN_UP_USER_START, signUpUser);\n}\n\nexport default function* userSagas() {\n    yield all ([\n        call(onEmailSignInStart),\n        call(onCheckUserSession), \n        call(onSignOutUserStart),\n        call(onSignUpUserStart)        \n    ])\n}"]},"metadata":{},"sourceType":"module"}