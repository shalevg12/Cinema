{"ast":null,"code":"import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { auth, handleUserProfile, GoogleProvider } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess } from './user.actions';\nexport function* getSnapShotFromUserAuth(user) {\n  try {\n    const userRef = yield call(handleUserProfile, {\n      userAuth: user\n    });\n    userRef.onSnapshot(snapshot => {\n      dispatch(setCurrentUser({\n        id: snapshot.id,\n        ...snapshot.data()\n      }));\n    });\n  } catch (err) {//console.log(err);\n  }\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user); // yield put(\n    //     signInSuccess()\n    // )\n  } catch (err) {//colsole.log(err);\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport default function* userSagas() {\n  yield all([call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/macbook/cinema/src/Redux/User/user.sagas.js"],"names":["takeLatest","call","all","put","auth","handleUserProfile","GoogleProvider","userTypes","signInSuccess","getSnapShotFromUserAuth","user","userRef","userAuth","onSnapshot","snapshot","dispatch","setCurrentUser","id","data","err","emailSignIn","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,iBAAf,EAAkCC,cAAlC,QAAwD,wBAAxD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,IAAlC,EAAuC;AAC1C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,iBAAD,EAAoB;AAAEO,MAAAA,QAAQ,EAAEF;AAAZ,KAApB,CAA1B;AAEAC,IAAAA,OAAO,CAACE,UAAR,CAAmBC,QAAQ,IAAG;AAC9BC,MAAAA,QAAQ,CAACC,cAAc,CAAC;AACpBC,QAAAA,EAAE,EAAEH,QAAQ,CAACG,EADO;AAEpB,WAAGH,QAAQ,CAACI,IAAT;AAFiB,OAAD,CAAf,CAAR;AAIC,KALD;AAOH,GAVD,CAUE,OAAMC,GAAN,EAAW,CACT;AACH;AACJ;AAED,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC3D,MAAI;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAW,MAAMN,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACC,IAAD,CAA7B,CAFA,CAGA;AACA;AACA;AAEF,GAPF,CAOG,OAAMS,GAAN,EAAW,CACT;AACH;AACD;AAEL,OAAO,UAAUM,kBAAV,GAA+B;AAClC,QAAMzB,UAAU,CAACO,SAAS,CAACmB,mBAAX,EAAgCN,WAAhC,CAAhB;AACH;AAED,eAAe,UAAUO,SAAV,GAAsB;AACjC,QAAMzB,GAAG,CAAC,CAACD,IAAI,CAACwB,kBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { auth, handleUserProfile, GoogleProvider } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess } from './user.actions';\n\n\nexport function* getSnapShotFromUserAuth(user){\n    try{\n        const userRef = yield call(handleUserProfile, { userAuth: user });\n        \n        userRef.onSnapshot(snapshot =>{\n        dispatch(setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n        }));\n        })\n            \n    } catch(err) {\n        //console.log(err);\n    }\n}\n\nexport function* emailSignIn({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapShotFromUserAuth(user)\n        // yield put(\n        //     signInSuccess()\n        // )\n\n     } catch(err) {\n         //colsole.log(err);\n     }\n    }\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport default function* userSagas() {\n    yield all([call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}