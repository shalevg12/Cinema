{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from './config';\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst GoogleProvider = new firebase.auth.GoogleAuthProvider();\nGoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(GoogleProvider);\nexport const handleUserProfile = async (userAuth, additionalData) => {\n  // LogIn : -------------------------------------\n  if (!userAuth) return;\n  const {\n    uid\n  } = userAuth;\n  const userRef = firestore.doc(`users/${uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const timestamp = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createDate: timestamp,\n        ...additionalData\n      });\n    } catch (err) {//console.log(err);\n    }\n  }\n\n  return userRef;\n}; // LogedIn -----------------------------------------","map":{"version":3,"sources":["/Users/macbook/cinema/src/Firebase/utils.js"],"names":["firebase","firebaseConfig","initializeApp","auth","firestore","GoogleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","handleUserProfile","userAuth","additionalData","uid","userRef","doc","snapshot","get","exists","displayName","email","timestamp","Date","set","createDate","err"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,SAASC,cAAT,QAA+B,UAA/B;AAGAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;AAEA,OAAO,MAAME,IAAI,GAAGH,QAAQ,CAACG,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAAT,EAAlB;AAEP,MAAMC,cAAc,GAAG,IAAIL,QAAQ,CAACG,IAAT,CAAcG,kBAAlB,EAAvB;AACAD,cAAc,CAACE,mBAAf,CAAmC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAnC;AACA,OAAO,MAAMC,gBAAgB,GAAI,MAAMN,IAAI,CAACO,eAAL,CAAqBL,cAArB,CAAhC;AAEP,OAAO,MAAMM,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAEjE;AACA,MAAG,CAACD,QAAJ,EAAc;AACd,QAAM;AAAEE,IAAAA;AAAF,MAAUF,QAAhB;AAEA,QAAMG,OAAO,GAAGX,SAAS,CAACY,GAAV,CAAe,SAAQF,GAAI,EAA3B,CAAhB;AACA,QAAMG,QAAQ,GAAG,MAAMF,OAAO,CAACG,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMR,OAAO,CAACS,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdI,QAAAA,UAAU,EAAEH,SAHE;AAId,WAAGT;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAMa,GAAN,EAAW,CACT;AACH;AACJ;;AACD,SAAOX,OAAP;AACH,CAzBM,C,CA2BP","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { firebaseConfig } from './config';\n\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst GoogleProvider = new firebase.auth.GoogleAuthProvider();\nGoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle =  () => auth.signInWithPopup(GoogleProvider);\n\nexport const handleUserProfile = async (userAuth, additionalData) => {\n    \n    // LogIn : -------------------------------------\n    if(!userAuth) return;\n    const { uid } = userAuth;\n\n    const userRef = firestore.doc(`users/${uid}`);\n    const snapshot = await userRef.get();\n\n    if(!snapshot.exists) {\n        const { displayName, email } = userAuth;\n        const timestamp = new Date();\n\n        try{\n            await userRef.set({\n                displayName,\n                email,\n                createDate: timestamp,\n                ...additionalData\n            });\n        } catch(err) {\n            //console.log(err);\n        }\n    }\n    return userRef\n};\n\n// LogedIn -----------------------------------------\n"]},"metadata":{},"sourceType":"module"}