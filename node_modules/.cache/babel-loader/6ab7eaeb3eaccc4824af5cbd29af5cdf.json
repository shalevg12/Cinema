{"ast":null,"code":"import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { auth, handleUserProfile, GoogleProvider } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess } from './user.actions';\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    yield auth.signInWithEmailAndPassword(email, password);\n    dispatch({\n      type: userTypes.SIGN_IN_SUCCESS,\n      payload: true\n    });\n  } catch (err) {//colsole.log(err);\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport default function* userSagas() {\n  yield all([call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/macbook/cinema/src/Redux/User/user.sagas.js"],"names":["takeLatest","call","all","put","auth","handleUserProfile","GoogleProvider","userTypes","signInSuccess","emailSignIn","payload","email","password","signInWithEmailAndPassword","dispatch","type","SIGN_IN_SUCCESS","err","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,IAAT,EAAeC,iBAAf,EAAkCC,cAAlC,QAAwD,wBAAxD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAGA,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC3D,MAAI;AACA,UAAMR,IAAI,CAACS,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAN;AACAE,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,SAAS,CAACS,eADX;AAELN,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAKF,GAPF,CAOG,OAAMO,GAAN,EAAW,CACT;AACH;AACD;AAEL,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAMlB,UAAU,CAACO,SAAS,CAACY,mBAAX,EAAgCV,WAAhC,CAAhB;AACH;AAED,eAAe,UAAUW,SAAV,GAAsB;AACjC,QAAMlB,GAAG,CAAC,CAACD,IAAI,CAACiB,kBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { auth, handleUserProfile, GoogleProvider } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess } from './user.actions';\n\n\nexport function* emailSignIn({ payload: { email, password } }) {\n    try {\n        yield auth.signInWithEmailAndPassword(email, password);\n        dispatch({\n            type: userTypes.SIGN_IN_SUCCESS,\n            payload: true\n        });\n\n     } catch(err) {\n         //colsole.log(err);\n     }\n    }\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport default function* userSagas() {\n    yield all([call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}