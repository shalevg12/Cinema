{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbook/Downloads/NewCinema/src/components/OrderHistory/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { TableContainer, Table, TableHead, TableRow, TableBody, TableCell } from '@material-ui/core';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nconst columns = [{\n  id: 'orderCreatedDate',\n  lable: 'Order Date'\n}, {\n  id: 'documentID',\n  lable: 'Order ID'\n}, {\n  id: 'orderTotal',\n  lable: 'Amount'\n}];\nconst styles = {\n  fontSize: '16px',\n  cursor: 'pointer',\n  width: '10%'\n};\n\nconst formatText = (columnName, columnValue) => {\n  switch (columnName) {\n    case 'orderTotal':\n      return `₪${columnValue}`;\n\n    case 'orderCreatedDate':\n      return moment(columnValue.nano).format('DD/MM/YYYY');\n\n    default:\n      return columnValue;\n  }\n};\n\nconst OrderHistory = ({\n  orders\n}) => {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: columns.map((column, pos) => {\n            const {\n              lable\n            } = column;\n            return /*#__PURE__*/_jsxDEV(TableCell, {\n              style: styles,\n              children: lable\n            }, pos, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: Array.isArray(orders) && orders.length > 0 && orders.map((row, pos) => {\n          const {\n            documentID\n          } = row;\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            onClick: () => history.push(`/order/${documentID}`),\n            children: columns.map((column, pos) => {\n              const columnName = column.id;\n              const columnValue = row[columnName];\n              const formattedText = formatText(columnName, columnValue);\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                style: styles,\n                children: formattedText\n              }, pos, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this);\n            })\n          }, pos, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderHistory, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = OrderHistory;\nexport default OrderHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderHistory\");","map":{"version":3,"sources":["/Users/macbook/Downloads/NewCinema/src/components/OrderHistory/index.js"],"names":["React","TableContainer","Table","TableHead","TableRow","TableBody","TableCell","moment","useHistory","columns","id","lable","styles","fontSize","cursor","width","formatText","columnName","columnValue","nano","format","OrderHistory","orders","history","map","column","pos","Array","isArray","length","row","documentID","push","formattedText"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EACkBC,KADlB,EACyBC,SADzB,EAEEC,QAFF,EAEYC,SAFZ,EAEuBC,SAFvB,QAGO,mBAHP;AAIA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,EAAE,EAAE,kBADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,EAAE,EAAE,YADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,EAAE,EAAE,YADN;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,CAAhB;AAeA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE,MADG;AAEbC,EAAAA,MAAM,EAAE,SAFK;AAGbC,EAAAA,KAAK,EAAE;AAHM,CAAf;;AAMA,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,WAAb,KAA6B;AAC9C,UAAQD,UAAR;AACE,SAAK,YAAL;AACE,aAAQ,IAAGC,WAAY,EAAvB;;AACF,SAAK,kBAAL;AACE,aAAOX,MAAM,CAACW,WAAW,CAACC,IAAb,CAAN,CAAyBC,MAAzB,CAAgC,YAAhC,CAAP;;AACF;AACE,aAAOF,WAAP;AANJ;AAQD,CATD;;AAWA,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACnC,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AAEA,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,KAAD;AAAA,8BAEE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,oBACGC,OAAO,CAACe,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC5B,kBAAM;AAAEf,cAAAA;AAAF,gBAAYc,MAAlB;AAEA,gCACE,QAAC,SAAD;AAEE,cAAA,KAAK,EAAEb,MAFT;AAAA,wBAIGD;AAJH,eACOe,GADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WAXA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAmBE,QAAC,SAAD;AAAA,kBAEIC,KAAK,CAACC,OAAN,CAAcN,MAAd,KAAyBA,MAAM,CAACO,MAAP,GAAgB,CAA1C,IAAgDP,MAAM,CAACE,GAAP,CAAW,CAACM,GAAD,EAAMJ,GAAN,KAAc;AACxE,gBAAM;AAAEK,YAAAA;AAAF,cAAiBD,GAAvB;AAEA,8BACE,QAAC,QAAD;AAEE,YAAA,OAAO,EAAE,MAAMP,OAAO,CAACS,IAAR,CAAc,UAASD,UAAW,EAAlC,CAFjB;AAAA,sBAKGtB,OAAO,CAACe,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC5B,oBAAMT,UAAU,GAAGQ,MAAM,CAACf,EAA1B;AACA,oBAAMQ,WAAW,GAAGY,GAAG,CAACb,UAAD,CAAvB;AACA,oBAAMgB,aAAa,GAAGjB,UAAU,CAACC,UAAD,EAAaC,WAAb,CAAhC;AAEA,kCACE,QAAC,SAAD;AAEE,gBAAA,KAAK,EAAEN,MAFT;AAAA,0BAIGqB;AAJH,iBACOP,GADP;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aAbA;AALH,aACOA,GADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAuBD,SA1BgD;AAFnD;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD,CA3DD;;GAAML,Y;UACYb,U;;;KADZa,Y;AA6DN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {\n  TableContainer, Table, TableHead,\n  TableRow, TableBody, TableCell\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nconst columns = [\n  {\n    id: 'orderCreatedDate',\n    lable: 'Order Date'\n  },\n  {\n    id: 'documentID',\n    lable: 'Order ID'\n  },\n  {\n    id: 'orderTotal',\n    lable: 'Amount'\n  }\n];\n\nconst styles = {\n  fontSize: '16px',\n  cursor: 'pointer',\n  width: '10%'\n};\n\nconst formatText = (columnName, columnValue) => {\n  switch (columnName) {\n    case 'orderTotal':\n      return `₪${columnValue}`;\n    case 'orderCreatedDate':\n      return moment(columnValue.nano).format('DD/MM/YYYY')\n    default:\n      return columnValue;\n  }\n};\n\nconst OrderHistory = ({ orders }) => {\n  const history = useHistory();\n\n  return (\n    <TableContainer>\n      <Table>\n\n        <TableHead>\n          <TableRow>\n            {columns.map((column, pos) => {\n              const { lable } = column;\n\n              return (\n                <TableCell\n                  key={pos}\n                  style={styles}\n                >\n                  {lable}\n                </TableCell>\n              )\n            })}\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n\n          {(Array.isArray(orders) && orders.length > 0) && orders.map((row, pos) => {\n            const { documentID } = row;\n\n            return (\n              <TableRow\n                key={pos}\n                onClick={() => history.push(`/order/${documentID}`)}\n              >\n\n                {columns.map((column, pos) => {\n                  const columnName = column.id;\n                  const columnValue = row[columnName];\n                  const formattedText = formatText(columnName, columnValue);\n\n                  return (\n                    <TableCell\n                      key={pos}\n                      style={styles}\n                    >\n                      {formattedText}\n                    </TableCell>\n                  )\n                })}\n\n              </TableRow>\n            )\n          })}\n\n        </TableBody>\n\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default OrderHistory;\n"]},"metadata":{},"sourceType":"module"}