{"ast":null,"code":"import { takeLatest, call, all, put, take } from 'redux-saga/effects';\nimport { auth, handleUserProfile, getCurrentUser } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess, signOutUserSuccess, userError } from './user.actions';\nexport function* getSnapshotFromUserAuth(user, additionalData = {}) {\n  try {\n    const userRef = yield call(handleUserProfile, {\n      userAuth: user,\n      additionalData\n    });\n    const snapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: snapshot.id,\n      ...snapshot.data()\n    }));\n  } catch (err) {// console.log(err);\n  }\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {//colsole.log(err);\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {//console.log(err);\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHEK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOutUser() {\n  try {\n    yield auth.signOut();\n    yield put(signOutUserSuccess());\n  } catch {//console.log(err);\n  }\n}\nexport function* onSignOutUserStart() {\n  yield takeLatest(userTypes.SIGN_OUT_USER_START, signOutUser);\n}\nexport function* signUpUser({\n  payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }\n}) {\n  if (password !== confirmPassword) {\n    const err = ['Password Doesn\\'t Match.'];\n    yield put(userError(err));\n    return;\n  }\n\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    const additionalData = {\n      displayName\n    };\n    yield getSnapshotFromUserAuth(user, additionalData);\n  } catch (err) {// console.log(err)\n  }\n}\nexport function* onSignUpUserStart() {\n  yield takeLatest(userTypes.SIGN_UP_USER_START, signUpUser);\n}\nexport default function* userSagas() {\n  yield all([call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutUserStart), call(onSignUpUserStart)]);\n}","map":{"version":3,"sources":["/Users/macbook/cinema/src/Redux/User/user.sagas.js"],"names":["takeLatest","call","all","put","take","auth","handleUserProfile","getCurrentUser","userTypes","signInSuccess","signOutUserSuccess","userError","getSnapshotFromUserAuth","user","additionalData","userRef","userAuth","snapshot","get","id","data","err","emailSignIn","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHEK_USER_SESSION","signOutUser","signOut","onSignOutUserStart","SIGN_OUT_USER_START","signUpUser","displayName","confirmPassword","createUserWithEmailAndPassword","onSignUpUserStart","SIGN_UP_USER_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, call, all, put, take } from 'redux-saga/effects';\nimport { auth, handleUserProfile, getCurrentUser } from './../../Firebase/utils';\nimport userTypes from './user.types';\nimport { signInSuccess, signOutUserSuccess, userError } from './user.actions';\n\n\nexport function* getSnapshotFromUserAuth(user, additionalData={}) {\n    try {\n        const userRef = yield call(handleUserProfile, { userAuth: user, additionalData });\n        const snapshot = yield userRef.get();\n        yield put(\n            signInSuccess({\n                id: snapshot.id,\n                ...snapshot.data()\n             })\n        );\n    } catch(err) {\n        // console.log(err);\n    }\n}\n\n\nexport function* emailSignIn({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user)\n\n     } catch(err) {\n         //colsole.log(err);\n     }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport function* isUserAuthenticated(){\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(err) {\n        //console.log(err);\n    }\n}\n\nexport function* onCheckUserSession () {\n    yield takeLatest(userTypes.CHEK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* signOutUser() {\n    try {\n        yield auth.signOut();\n        yield put(\n            signOutUserSuccess()\n        ) \n    }catch{\n        //console.log(err);\n    }\n}\n\nexport function* onSignOutUserStart() {\n    yield takeLatest(userTypes.SIGN_OUT_USER_START, signOutUser);\n}\n\nexport function* signUpUser({ payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n}}) {\n\n    if(password !== confirmPassword){\n        const err = ['Password Doesn\\'t Match.'];\n        yield put(\n            userError(err)\n        );\n        return;\n    }\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        const additionalData = { displayName };\n        yield getSnapshotFromUserAuth(user, additionalData );\n\n    } catch(err) {\n        // console.log(err)\n    }\n}\n\nexport function* onSignUpUserStart() {\n   yield takeLatest(userTypes.SIGN_UP_USER_START,signUpUser )\n}\n\nexport default function* userSagas() {\n    yield all ([call(onEmailSignInStart),\n                call(onCheckUserSession),\n                 call(onSignOutUserStart),\n                 call(onSignUpUserStart)\n             ])\n}"]},"metadata":{},"sourceType":"module"}