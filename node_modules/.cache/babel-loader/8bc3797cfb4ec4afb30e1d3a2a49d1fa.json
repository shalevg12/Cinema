{"ast":null,"code":"import cartTypes from './cart.types';\nimport { handleAddToCart, handleRemoveCartItem, handleReduceCartItem } from './cart.utils';\nconst INITIAL_STATE = {\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartTypes.ADD_TO_CART:\n      return { ...state,\n        cartItems: handleAddToCart({\n          prevCartItems: state.cartItems,\n          nextCartItem: action.payload\n        })\n      };\n\n    case cartTypes.REDUCE_CART_ITEM:\n      return { ...state,\n        cartItems: handleReduceCartItem({\n          prevCartItems: state.cartItems,\n          cartItemToReduce: action.payload\n        })\n      };\n\n    case cartTypes.REMOVE_CART_ITEM:\n      return { ...state,\n        cartItems: handleRemoveCartItem({\n          prevCartItems: state.cartItems,\n          cartItemToRemove: action.payload\n        })\n      };\n\n    case cartTypes.CLEAR_CART:\n      return { ...state,\n        ...INITIAL_STATE\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/macbook/Downloads/NewCinema/src/redux/Cart/cart.reducer.js"],"names":["cartTypes","handleAddToCart","handleRemoveCartItem","handleReduceCartItem","INITIAL_STATE","cartItems","cartReducer","state","action","type","ADD_TO_CART","prevCartItems","nextCartItem","payload","REDUCE_CART_ITEM","cartItemToReduce","REMOVE_CART_ITEM","cartItemToRemove","CLEAR_CART"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,eAAT,EAA0BC,oBAA1B,EACEC,oBADF,QAC8B,cAD9B;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE;AADS,CAAtB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAS,CAACU,WAAf;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,SAAS,EAAEJ,eAAe,CAAC;AACzBU,UAAAA,aAAa,EAAEJ,KAAK,CAACF,SADI;AAEzBO,UAAAA,YAAY,EAAEJ,MAAM,CAACK;AAFI,SAAD;AAFrB,OAAP;;AAOF,SAAKb,SAAS,CAACc,gBAAf;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,SAAS,EAAEF,oBAAoB,CAAC;AAC9BQ,UAAAA,aAAa,EAAEJ,KAAK,CAACF,SADS;AAE9BU,UAAAA,gBAAgB,EAAEP,MAAM,CAACK;AAFK,SAAD;AAF1B,OAAP;;AAOF,SAAKb,SAAS,CAACgB,gBAAf;AACE,aAAO,EACL,GAAGT,KADE;AAELF,QAAAA,SAAS,EAAEH,oBAAoB,CAAC;AAC9BS,UAAAA,aAAa,EAAEJ,KAAK,CAACF,SADS;AAE9BY,UAAAA,gBAAgB,EAAET,MAAM,CAACK;AAFK,SAAD;AAF1B,OAAP;;AAOF,SAAKb,SAAS,CAACkB,UAAf;AACE,aAAO,EACL,GAAGX,KADE;AAEL,WAAGH;AAFE,OAAP;;AAIF;AACE,aAAOG,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,eAAeD,WAAf","sourcesContent":["import cartTypes from './cart.types';\nimport { handleAddToCart, handleRemoveCartItem,\n  handleReduceCartItem } from './cart.utils';\n\nconst INITIAL_STATE = {\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartTypes.ADD_TO_CART:\n      return {\n        ...state,\n        cartItems: handleAddToCart({\n          prevCartItems: state.cartItems,\n          nextCartItem: action.payload\n        })\n      };\n    case cartTypes.REDUCE_CART_ITEM:\n      return {\n        ...state,\n        cartItems: handleReduceCartItem({\n          prevCartItems: state.cartItems,\n          cartItemToReduce: action.payload\n        })\n      };\n    case cartTypes.REMOVE_CART_ITEM:\n      return {\n        ...state,\n        cartItems: handleRemoveCartItem({\n          prevCartItems: state.cartItems,\n          cartItemToRemove: action.payload\n        })\n      };\n    case cartTypes.CLEAR_CART:\n      return {\n        ...state,\n        ...INITIAL_STATE\n      }\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}