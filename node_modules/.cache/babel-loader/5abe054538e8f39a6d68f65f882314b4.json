{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { checkUserIsAdmin } from './../Utils';\n\nconst mapState = ({\n  user\n}) => ({\n  currentUser: user.currentUser\n});\n\nconst UseAdminAuth = props => {\n  _s();\n\n  const {\n    currentUser\n  } = useSelector(mapState);\n  const history = useHistory();\n  useEffect(() => {\n    if (!checkUserIsAdmin(currentUser)) {\n      history.push('/login');\n    }\n  }, [currentUser]);\n  return currentUser;\n};\n\n_s(UseAdminAuth, \"J/33iK0/VbZ6jDe1sMa/N97vUzM=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c = UseAdminAuth;\nexport default UseAdminAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseAdminAuth\");","map":{"version":3,"sources":["/Users/macbook/cinema/src/customHooks/useAdminAuth.js"],"names":["useEffect","useSelector","useHistory","checkUserIsAdmin","mapState","user","currentUser","UseAdminAuth","props","history","push"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAc;AAC3BC,EAAAA,WAAW,EAAED,IAAI,CAACC;AADS,CAAd,CAAjB;;AAIA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM;AAAEF,IAAAA;AAAF,MAAkBL,WAAW,CAACG,QAAD,CAAnC;AACA,QAAMK,OAAO,GAAGP,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACG,gBAAgB,CAACG,WAAD,CAArB,EAAoC;AAChCG,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AAEH;AAEJ,GANQ,EAMN,CAACJ,WAAD,CANM,CAAT;AAQA,SAAOA,WAAP;AACH,CAbD;;GAAMC,Y;UACsBN,W,EACRC,U;;;KAFdK,Y;AAgBN,eAAeA,YAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { checkUserIsAdmin } from './../Utils';\n\nconst mapState = ({ user}) => ({\n    currentUser: user.currentUser\n});\n\nconst UseAdminAuth = props => {\n    const { currentUser } = useSelector(mapState);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!checkUserIsAdmin(currentUser)) {\n            history.push('/login')\n\n        }\n\n    }, [currentUser])\n\n    return currentUser;\n}\n\n\nexport default UseAdminAuth;"]},"metadata":{},"sourceType":"module"}