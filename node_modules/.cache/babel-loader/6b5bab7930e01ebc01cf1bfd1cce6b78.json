{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbook/cinema/src/components/Signup/index.js\",\n    _s = $RefreshSig$();\n\n//React\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom'; //Functions\n\nimport { signUpUserStart } from './../../Redux/User/user.actions';\nimport './styles.scss';\nimport FormInput from './../Forms/FormInput';\nimport Button from './../Forms/Button';\n\nconst mapState = ({\n  user\n}) => ({\n  currentUser: user.currentUser,\n  userErr: user.userErr\n});\n\nconst SignUp = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    currentUser,\n    userErr\n  } = useSelector(mapState);\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState('');\n  useEffect(() => {\n    if (currentUser) {\n      reset();\n      history.push('/');\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors('');\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(signUpUserStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((err, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: err\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"text\",\n            name: \"displayName\",\n            value: displayName,\n            placeholder: \"Full name\",\n            handleChange: e => setDisplayName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            placeholder: \"Email\",\n            handleChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            handleChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            placeholder: \"Confirm Password\",\n            handleChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"DbYmKSEdzuhVAqpBcFEcmsBwqRg=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/macbook/cinema/src/components/Signup/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useHistory","signUpUserStart","FormInput","Button","mapState","user","currentUser","userErr","SignUp","props","dispatch","history","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","reset","push","Array","isArray","length","handleFormSubmit","event","preventDefault","map","err","index","e","target","value"],"mappings":"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","sourcesContent":["//React\nimport React, { useState , useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\n//Functions\nimport { signUpUserStart } from './../../Redux/User/user.actions';\nimport './styles.scss';\n\nimport FormInput from './../Forms/FormInput';\nimport Button from './../Forms/Button';\n\n\nconst mapState= ({ user }) => ({\n    currentUser: user.currentUser,\n    userErr: user.userErr\n});\n\nconst SignUp = props => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { currentUser, userErr} = useSelector(mapState);\n    const [displayName, setDisplayName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [errors, setErrors] = useState('');\n\n    useEffect(() => {\n        if(currentUser){\n            reset();\n            history.push('/');\n        }\n    }, [currentUser]);\n\n    useEffect(() => {\n        if(Array.isArray(userErr) && userErr.length > 0) {\n            setErrors(userErr)\n        }\n    }, [userErr]);\n\n    const reset = () => {\n        setDisplayName('');\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n        setErrors('');\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        dispatch(signUpUserStart({\n            displayName,\n            email,\n            password,\n            confirmPassword\n        }));\n\n    }\n\n    return (\n            <div className = 'signup'>\n                <div className = 'wrap'>\n                    <h2>\n                        SignUp\n                    </h2>\n\n                    {errors.length > 0 && (\n                        <ul>\n                            {errors.map((err,index) => {\n                                return (\n                                    <li key = {index}>\n                                        {err}\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    )}\n\n                    <div className = 'formWrap'>\n\n                        <form onSubmit = {handleFormSubmit}>\n\n                        <FormInput \n                                type = 'text'\n                                name = 'displayName'\n                                value = {displayName}\n                                placeholder = 'Full name'\n                                handleChange={e => setDisplayName(e.target.value)}\n                            />\n\n                            <FormInput \n                                type = 'email'\n                                name = 'email'\n                                value = {email}\n                                placeholder = 'Email'\n                                handleChange={e => setEmail(e.target.value)}\n                            />\n\n                            <FormInput \n                                type = 'password'\n                                name = 'password'\n                                value = {password}\n                                placeholder = 'Password'\n                                handleChange={e => setPassword(e.target.value)}\n                            />\n\n                            <FormInput \n                                type = 'password'\n                                name = 'confirmPassword'\n                                value = {confirmPassword}\n                                placeholder = 'Confirm Password'\n                                handleChange={e => setConfirmPassword(e.target.value)}\n                            />\n\n                            <Button type = 'submit'>\n                                Register\n                            </Button>\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        ); \n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}