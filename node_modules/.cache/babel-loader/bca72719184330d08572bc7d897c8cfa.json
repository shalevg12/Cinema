{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/macbook/cinema/src/components/Signup/index.js\",\n    _s = $RefreshSig$();\n\n//React\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom'; //Functions\n\nimport { signUpUser } from './../../Redux/User/user.actions';\nimport './styles.scss';\nimport FormInput from './../Forms/FormInput';\nimport Button from './../Forms/Button';\n\nconst mapState = ({\n  user\n}) => ({\n  signUpSuccess: user.signUpSuccess,\n  signUpError: user.signUpError\n});\n\nconst Signup = props => {\n  _s();\n\n  const {\n    signUpSuccess,\n    signUpError\n  } = useSelector(mapState);\n  const dispatch = useDispatch();\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState('');\n  useEffect(() => {\n    if (signUpSuccess) {\n      reset();\n      props.history.push('/');\n    }\n  }, [signUpSuccess]);\n  useEffect(() => {\n    if (Array.isArray(signUpError) && signUpError.length > 0) {\n      setErrors(signUpError);\n    }\n  }, [signUpError]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors('');\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(signUpUser({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((err, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: err\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"text\",\n            name: \"displayName\",\n            value: displayName,\n            placeholder: \"Full name\",\n            handleChange: e => setDisplayName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            placeholder: \"Email\",\n            handleChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            handleChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            placeholder: \"Confirm Password\",\n            handleChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"tPtxohYhXiLl6V8FtYx/7VtMpo4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Signup;\nexport default _c2 = withRouter(Signup);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Signup\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/macbook/cinema/src/components/Signup/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","withRouter","signUpUser","FormInput","Button","mapState","user","signUpSuccess","signUpError","Signup","props","dispatch","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","reset","history","push","Array","isArray","length","handleFormSubmit","event","preventDefault","map","err","index","e","target","value"],"mappings":"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","sourcesContent":["//React\nimport React, { useState , useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n//Functions\nimport { signUpUser } from './../../Redux/User/user.actions';\nimport './styles.scss';\n\nimport FormInput from './../Forms/FormInput';\nimport Button from './../Forms/Button';\n\n\nconst mapState = ({ user }) => ({\n    signUpSuccess: user.signUpSuccess,\n    signUpError: user.signUpError\n});\n\nconst Signup = props => {\n    const { signUpSuccess, signUpError } = useSelector(mapState);\n    const dispatch = useDispatch();\n    const [displayName, setDisplayName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [errors, setErrors] = useState('');\n\n    useEffect(() => {\n        if(signUpSuccess){\n            reset();\n            props.history.push('/');\n        }\n    }, [signUpSuccess]);\n\n    useEffect(() => {\n        if(Array.isArray(signUpError) && signUpError.length > 0) {\n            setErrors(signUpError);\n        }\n    }, [signUpError]);\n\n    const reset = () => {\n        setDisplayName('');\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n        setErrors('');\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        dispatch(signUpUser({\n            displayName,\n            email,\n            password,\n            confirmPassword\n        }));\n    }\n\n    return (\n        <div className = 'signup'>\n            <div className = 'wrap'>\n                <h2>\n                    SignUp\n                </h2>\n\n\n                {errors.length > 0 && (\n                    <ul>\n                        {errors.map((err,index) => {\n                            return (\n                                <li key = {index}>\n                                    {err}\n                                </li>\n                            )\n                        })}\n                    </ul>\n                )}\n\n                <div className = 'formWrap'>\n\n                    <form onSubmit = {handleFormSubmit}>\n\n                    <FormInput \n                            type = 'text'\n                            name = 'displayName'\n                            value = {displayName}\n                            placeholder = 'Full name'\n                            handleChange =  {e => setDisplayName(e.target.value)}\n                        />\n\n                        <FormInput \n                            type = 'email'\n                            name = 'email'\n                            value = {email}\n                            placeholder = 'Email'\n                            handleChange = {e => setEmail(e.target.value)}\n                        />\n\n                        <FormInput \n                            type = 'password'\n                            name = 'password'\n                            value = {password}\n                            placeholder = 'Password'\n                            handleChange = {e => setPassword(e.target.value)}\n                        />\n\n                        <FormInput \n                            type = 'password'\n                            name = 'confirmPassword'\n                            value = {confirmPassword}\n                            placeholder = 'Confirm Password'\n                            handleChange = {e => setConfirmPassword(e.target.value)}\n                        />\n\n                        <Button type = 'submit'>\n                            Register\n                        </Button>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(Signup);"]},"metadata":{},"sourceType":"module"}